// <auto-generated />
using System;
using Dotnet_Dietitian.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dotnet_Dietitian.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250518131400_MesajEntityAdd")]
    partial class MesajEntityAdd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppRoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppRoleId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.DiyetProgrami", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GunlukAdimHedefi")
                        .HasColumnType("int");

                    b.Property<decimal?>("KarbonhidratGram")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("OlusturanDiyetisyenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ProteinGram")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("YagGram")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OlusturanDiyetisyenId");

                    b.ToTable("DiyetProgramlari");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.Diyetisyen", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("DeneyimYili")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Hakkinda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MezuniyetOkulu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilResmiUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Puan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<string>("Sehir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TcKimlikNumarasi")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ToplamYorumSayisi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Uzmanlik")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TcKimlikNumarasi")
                        .IsUnique();

                    b.HasIndex("Telefon")
                        .IsUnique()
                        .HasFilter("[Telefon] IS NOT NULL");

                    b.ToTable("Diyetisyenler");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.DiyetisyenUygunluk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("BaslangicSaati")
                        .HasColumnType("time");

                    b.Property<DateTime>("BaslangicZamani")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("BitisSaati")
                        .HasColumnType("time");

                    b.Property<DateTime>("BitisZamani")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DiyetisyenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Gun")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Musait")
                        .HasColumnType("bit");

                    b.Property<string>("Notlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("TekrarTipi")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("TekrarlanirMi")
                        .HasColumnType("bit");

                    b.Property<string>("TekrarlanmaSikligi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiyetisyenId");

                    b.ToTable("DiyetisyenUygunluklar");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.Hasta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float?>("Boy")
                        .HasColumnType("real");

                    b.Property<Guid?>("DiyetProgramiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DiyetisyenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("GunlukKaloriIhtiyaci")
                        .HasColumnType("int");

                    b.Property<float?>("Kilo")
                        .HasColumnType("real");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TcKimlikNumarasi")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Yas")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiyetProgramiId");

                    b.HasIndex("DiyetisyenId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TcKimlikNumarasi")
                        .IsUnique();

                    b.HasIndex("Telefon")
                        .IsUnique()
                        .HasFilter("[Telefon] IS NOT NULL");

                    b.ToTable("Hastalar");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.Mesaj", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AliciId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AliciTipi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("GonderenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GonderenTipi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("GonderimZamani")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Okundu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("OkunmaZamani")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AliciId");

                    b.HasIndex("GonderenId");

                    b.ToTable("Mesajlar");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.OdemeBilgisi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HastaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IslemReferansNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OdemeTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tutar")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("HastaId");

                    b.ToTable("OdemeBilgileri");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.Randevu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DiyetisyenId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DiyetisyenOnayi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Durum")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Bekliyor");

                    b.Property<Guid>("HastaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HastaOnayi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Notlar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RandevuBaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RandevuBitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("RandevuTuru")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("YaratilmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DiyetisyenId");

                    b.HasIndex("HastaId");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.AppUser", b =>
                {
                    b.HasOne("Dotnet_Dietitian.Domain.Entities.AppRole", "AppRole")
                        .WithMany("AppUsers")
                        .HasForeignKey("AppRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppRole");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.DiyetProgrami", b =>
                {
                    b.HasOne("Dotnet_Dietitian.Domain.Entities.Diyetisyen", "OlusturanDiyetisyen")
                        .WithMany("OlusturulanProgramlar")
                        .HasForeignKey("OlusturanDiyetisyenId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("OlusturanDiyetisyen");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.DiyetisyenUygunluk", b =>
                {
                    b.HasOne("Dotnet_Dietitian.Domain.Entities.Diyetisyen", "Diyetisyen")
                        .WithMany("UygunlukZamanlari")
                        .HasForeignKey("DiyetisyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diyetisyen");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.Hasta", b =>
                {
                    b.HasOne("Dotnet_Dietitian.Domain.Entities.DiyetProgrami", "DiyetProgrami")
                        .WithMany("Hastalar")
                        .HasForeignKey("DiyetProgramiId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Dotnet_Dietitian.Domain.Entities.Diyetisyen", "Diyetisyen")
                        .WithMany("Hastalar")
                        .HasForeignKey("DiyetisyenId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("DiyetProgrami");

                    b.Navigation("Diyetisyen");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.Mesaj", b =>
                {
                    b.HasOne("Dotnet_Dietitian.Domain.Entities.Diyetisyen", "AliciDiyetisyen")
                        .WithMany("AlinanMesajlar")
                        .HasForeignKey("AliciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dotnet_Dietitian.Domain.Entities.Hasta", "AliciHasta")
                        .WithMany("AlinanMesajlar")
                        .HasForeignKey("AliciId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dotnet_Dietitian.Domain.Entities.Diyetisyen", "GonderenDiyetisyen")
                        .WithMany("GonderilenMesajlar")
                        .HasForeignKey("GonderenId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Dotnet_Dietitian.Domain.Entities.Hasta", "GonderenHasta")
                        .WithMany("GonderilenMesajlar")
                        .HasForeignKey("GonderenId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AliciDiyetisyen");

                    b.Navigation("AliciHasta");

                    b.Navigation("GonderenDiyetisyen");

                    b.Navigation("GonderenHasta");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.OdemeBilgisi", b =>
                {
                    b.HasOne("Dotnet_Dietitian.Domain.Entities.Hasta", "Hasta")
                        .WithMany("Odemeler")
                        .HasForeignKey("HastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hasta");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.Randevu", b =>
                {
                    b.HasOne("Dotnet_Dietitian.Domain.Entities.Diyetisyen", "Diyetisyen")
                        .WithMany("Randevular")
                        .HasForeignKey("DiyetisyenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dotnet_Dietitian.Domain.Entities.Hasta", "Hasta")
                        .WithMany("Randevular")
                        .HasForeignKey("HastaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diyetisyen");

                    b.Navigation("Hasta");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.AppRole", b =>
                {
                    b.Navigation("AppUsers");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.DiyetProgrami", b =>
                {
                    b.Navigation("Hastalar");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.Diyetisyen", b =>
                {
                    b.Navigation("AlinanMesajlar");

                    b.Navigation("GonderilenMesajlar");

                    b.Navigation("Hastalar");

                    b.Navigation("OlusturulanProgramlar");

                    b.Navigation("Randevular");

                    b.Navigation("UygunlukZamanlari");
                });

            modelBuilder.Entity("Dotnet_Dietitian.Domain.Entities.Hasta", b =>
                {
                    b.Navigation("AlinanMesajlar");

                    b.Navigation("GonderilenMesajlar");

                    b.Navigation("Odemeler");

                    b.Navigation("Randevular");
                });
#pragma warning restore 612, 618
        }
    }
}
